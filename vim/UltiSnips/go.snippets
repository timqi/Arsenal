# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet mi "map[string]interface{}" w
map[string]interface{}{${1}}
endsnippet


snippet lce "logs.CtxError" w
logs.CtxError(${2:ctx}, "${1}. err: %+v", ${3:err})
endsnippet

snippet fnt "func Test_...(t *testing.T) {}" b
func Test_${1:}(t *testing.T) {
	${2:}
}
endsnippet

snippet fn "func ...() {...}" b
func ${1:#:()} ${2:name}(${3:#:type}) ${4:#:return} {
   ${5}
   return
}
endsnippet

snippet ts "type .. struct {}" b
type ${1} struct {
   ${2}
}
endsnippet

snippet ti "type .. interface {}" b
type ${1} interface {
   ${2}
}
endsnippet

snippet forr "for .. := range .." b
for ${2:v} := range ${1:#:iterator} {
   ${3}
}
endsnippet

snippet if "if .. {}" b
if ${1:#:condition} {
   ${2}
}
endsnippet

snippet ife "if err != nil {}" b
if err != nil {
   ${1}
}
endsnippet

snippet iferr "if err = ..; err != nil {}" w
if err = ${1}; err != nil {
   ${2}
   return
}
endsnippet

